中介者模式(Mediator) 行为型：

意图：
	用一个中介对象来封装一系列的对象交互。
	中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。

适用性：
	1.一组对象以定义良好但是复杂的方式进行通信。产生的相互依赖关系结构混乱且难以理解。
	2.一个对象引用其他很多对象并且直接与这些对象通信,导致难以复用该对象。
	3.想定制一个分布在多个类中的行为，而又不想生成太多的子类。
	
角色：
	抽象中介者：定义好同事类对象到中介者对象的接口，用于各个同事类之间的通信。
		一般包括一个或几个抽象的事件方法，并由子类去实现。
	中介者实现类：从抽象中介者继承而来，实现抽象中介者中定义的事件方法。
		从一个同事类接收消息，然后通过消息影响其他同时类。
	同事类：如果一个对象会影响其他的对象，同时也会被其他对象影响，那么这两个对象称为同事类。

优点:
	1.适当地使用中介者模式可以避免同事类之间的过度耦合，使得各同事类之间可以相对独立地使用。
	2.使用中介者模式可以将对象间一对多的关联转变为一对一的关联，使对象间的关系易于理解和维护。
	3.使用中介者模式可以将对象的行为和协作进行抽象，能够比较灵活的处理对象间的相互作用。

相关模式:
	1.Facade与中介者的不同之处在于它是对一个对象子系统进行抽象，从而提供了一个更为方便的接口，
		它的协议是单向的，即Facade对象对这个子系统类提出请求，但反之则不可。
		相反， Mediator提供了各Colleague对象不支持或不能支持的协作行为，而且协议是多向的。
	2.Colleague可使用Observer模式与Mediator通信。

实例：
	联合国转发各国声明, 调停各国关系: 
	各国向联合国安理会发送和接收消息, 安理会在各国间'适当地'转发请求以实现协作行为
	
