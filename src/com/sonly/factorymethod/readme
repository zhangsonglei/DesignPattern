工厂方法模式（Factory Method）：
	由于静态工厂方法模式不满足OCP, 因此就出现了工厂方法模式；工厂方法模式和静态工厂模式最大的不同在于: 
	静态工厂模式只有一个(对于一个项目/独立模块)只有一个工厂类，而工厂方法模式则有一组实现了相同接口的工厂类。

意图：
	定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method 使一个类的实例化延迟到其子类。

适用性：
	当一个类不知道它所必须创建的对象的类的时候。
	当一个类希望由它的子类来指定它所创建的对象的时候。
	当类将创建对象的职责委托给多个帮助子类中的某一个，并且你希望将哪一个帮助子类是代理者这一信息局部化的时候。

优点： 
	基本与静态工厂模式一致，多的一点优点就是遵循了开放-封闭原则，使得模式的灵活性更强。

缺点：
	与静态工厂模式差不多, 但是增加了类组织的复杂性。

小结：
	虽然根据理论原则, 需要使用工厂方法模式, 但实际上, 常用的还是静态工厂模式。
	
静态工厂模式	用来生成同一等级结构中的任意产品, 对于增加新的产品, 需要修改已有代码
工厂方法模式	用来生成同一等级结构的固定产品, 支持增加任意产品;
抽象工厂模式	用来生成不同产品族的全部产品, 对于增加新的产品无能为力;